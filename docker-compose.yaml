version: "3.8"
services:
    # mongo:
    #     container_name: mongo
    #     image: mongo:4.4.6
    #     restart: always
    #     networks:
    #         - apim-net
    #     # environment:
    #         # MONGO_INITDB_ROOT_USERNAME: svc_apim
    #         # MONGO_INITDB_ROOT_PASSWORD: svc_apim
    #     ports:
    #         - 27017:27017
    #     volumes:
    #         - ./mongodata:/data/db
    
    # redpanda:
    #     image: docker.redpanda.com/vectorized/redpanda:v22.2.2
    #     container_name: redpanda
    #     restart: always
    #     networks:
    #         - apim-net
    #     command:
    #         - redpanda
    #         - start
    #         - --smp
    #         - '1'
    #         - --reserve-memory
    #         - 0M
    #         - --overprovisioned
    #         - --node-id
    #         - '0'
    #         - --kafka-addr
    #         - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
    #         - --advertise-kafka-addr
    #         - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    #         - --pandaproxy-addr
    #         - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
    #         - --advertise-pandaproxy-addr
    #         - PLAINTEXT://redpanda:28082,OUTSIDE://0.0.0.0:8082
    #     ports:
    #         - 8081:8081
    #         - 8082:8082
    #         - 9092:9092
    #         - 28082:28082
    #         - 29092:29092
       

    # akhq:
    #     container_name: akhq
    #     image: tchiotludo/akhq:0.22.0
    #     restart: always
    #     ports:
    #         - 9090:8080
    #     networks:
    #         - apim-net
    #     links:
    #         - redpanda
    #     environment:
    #         AKHQ_CONFIGURATION: |
    #             akhq:
    #                 connections:
    #                     redpanda:
    #                         properties:
    #                             bootstrap.servers: "redpanda:29092"
    #                         schema-registry:
    #                             url: "http://redpanda:8081"

    postgres:
        image: postgres:9.5
        container_name: postgres
        environment:
            POSTGRES_DB: kong
            POSTGRES_PASSWORD: kong
            POSTGRES_USER: kong
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "kong"]
            interval: 30s
            timeout: 30s
            retries: 3
        restart: on-failure
        stdin_open: true
        tty: true
        networks:
            - apim-net
        volumes:
            - ./pgdata:/var/lib/postgresql/data

    kong:
        image: ${KONG_IMAGE:-harbor01.viavarejo.com.br/apix/kong:1.5.0-5}
        container_name: kong
        user: "${KONG_USER:-root}"
        depends_on:
            - postgres
            - kong-migrations
        environment:
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: '0.0.0.0:8001'
            KONG_CASSANDRA_CONTACT_POINTS: postgres
            KONG_DATABASE: postgres
            KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
            KONG_PG_HOST: postgres
            KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
            KONG_PG_USER: ${KONG_PG_USER:-kong}
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
        extra_hosts:
            - "apimanagement-dev.via.com.br:10.103.43.20"
        networks:
            - apim-net
        ports:
            - "8000:8000/tcp"
            - "8001:8001/tcp"
            - "8443:8443/tcp"
            - "8444:8444/tcp"
        restart: on-failure

    kong-migrations:
        image: "${KONG_IMAGE:-harbor01.viavarejo.com.br/apix/kong:1.5.0-5}"
        container_name: kong-migrations
        command: kong migrations bootstrap
        depends_on:
            - postgres
        environment:
            KONG_DATABASE: postgres
            KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
            KONG_PG_HOST: postgres
            KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
            KONG_PG_USER: ${KONG_PG_USER:-kong}
        links:
            - postgres:postgres
        networks:
            - apim-net
        restart: on-failure

    konga:
        image: pantsel/konga
        container_name: konga
        depends_on:
            - kong
        environment:
            NODE_ENV: production
        links:
            - kong:kong
        networks:
            - apim-net
        ports:
            - "1337:1337/tcp"
        restart: on-failure
        volumes:
            - ./kongadata:/app/kongadata

    minio:
        image: minio/minio:latest
        container_name: minio
        command: server /data --console-address ":9001"
        ports:
            - 9000:9000
            - 9001:9001
        volumes:
            - ./miniodata:/data

networks: 
    apim-net:
        driver: bridge